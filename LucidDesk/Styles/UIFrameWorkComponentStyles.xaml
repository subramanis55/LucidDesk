<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:LucidDesk.Styles"
                     xmlns:UserControl="clr-namespace:LucidDesk.UserControls"
                    >
    <Style x:Key="NormalButton" TargetType="Button" >
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Background" Value="{DynamicResource MainThemeColor}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="4" Background="{TemplateBinding Background}" >
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{DynamicResource SubThemeColor2}"/>
                <Setter Property="Foreground" Value="{DynamicResource MainThemeColor}"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MainThemeColor}"/>
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="true">
                <Setter Property="Background"  Value="{DynamicResource SubThemeColor2}"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>

        </Style.Triggers>
    </Style>
    <Style x:Key="CloseBtn" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <!--<Setter Property="FocusVisualStyle" Value="{x:Null}"/>-->
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="0" Padding="6" Background="{TemplateBinding Background}" BorderBrush="White">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#E51400"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CircleBtn" TargetType="Button">
        <Setter Property="Margin" Value="15 0 15 0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="50" Background="{TemplateBinding Background}"    Padding="4" BorderThickness=" 1" BorderBrush="Gainsboro">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="Gainsboro"/>
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="true">
                <Setter Property="Background" Value="Gainsboro"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RadionButton" TargetType="RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <BulletDecorator Background="Transparent" VerticalAlignment="Center">
                        <BulletDecorator.Bullet>
                            <Grid Width="15" Height="15" VerticalAlignment="Center">
                                <Ellipse x:Name="Border" 
                                             Stroke="Black" 
                                             StrokeThickness="1"
                                             Fill="Transparent"/>
                                <Ellipse x:Name="CheckMark" 
                                             Fill="Black"
                                             Width="8" 
                                             Height="8" 
                                             HorizontalAlignment="Center" 
                                             VerticalAlignment="Center"
                                             Visibility="Hidden"/>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter VerticalAlignment="Center"  />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Stroke" Value="Gray"/>
                            <Setter TargetName="CheckMark" Property="Fill" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBox" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent" VerticalAlignment="Center">
                        <BulletDecorator.Bullet>
                            <Grid Width="18" Height="18" VerticalAlignment="Center">
                                <Border x:Name="Border" 
                                             BorderBrush="Black" 
                                             BorderThickness="1"
                                             Background="Transparent"
                                             Width="18"
                                             Height="18"/>
                                <Path x:Name="CheckMark"
                                             Data="M 0 5 L 5 10 L 15 0"
                                             Stroke="Black"
                                             StrokeThickness="2"
                                             HorizontalAlignment="Center" 
                                             VerticalAlignment="Center"
                                             Visibility="Hidden"/>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" Margin="25,0,0,0"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="BorderBrush" Value="Gray"/>
                            <Setter TargetName="CheckMark" Property="Stroke" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundedImage" TargetType="{x:Type UserControl:RoundedImage}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type UserControl:RoundedImage}">
                    <Viewbox>
                        <Ellipse Height="100" Width="100" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderWidth}">
                            <Ellipse.Fill>
                                <ImageBrush Stretch="Uniform" ImageSource="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Image}" >
                                    <ImageBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="{Binding RelativeSource={RelativeSource TemplatedParent},Path=ZoomFacter}" ScaleY="{Binding RelativeSource={RelativeSource TemplatedParent},Path=ZoomFacter}" />
                                            <TranslateTransform X="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Xtranslate}" Y="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Ytranslate}"/>
                                        </TransformGroup>
                                    </ImageBrush.RelativeTransform>
                                </ImageBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboBox-->
    <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="25"/>
                            </Grid.ColumnDefinitions>
                            <Border Name="Border" Grid.Column="0" Padding="15 0" Grid.ColumnSpan="2"  CornerRadius="3" BorderThickness="2" Background="{StaticResource ComboBoxBackgroundColor}"   BorderBrush="{StaticResource ComboBoxBorderColor}" >
                            </Border>
                            <Path Name="Arrow" Grid.Column="1" Fill="{TemplateBinding BorderBrush}" HorizontalAlignment="Center" VerticalAlignment="Center"   Data="M 0 0 L 4 4 L 8 0 Z">
                            </Path>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource MainThemeColor}"/>
                            <Setter TargetName="Border"  Property="BorderBrush" Value="{DynamicResource MainThemeColor}"/>
                            <Setter TargetName="Border"  Property="BorderThickness" Value="{DynamicResource BorderThickness}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource MainThemeColor}"/>
                            <Setter TargetName="Border"  Property="BorderThickness" Value="{DynamicResource BorderThickness}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource MainThemeColor}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource MainThemeColor}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboxTextBox"  TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost1"  Focusable="False" Visibility="Hidden" Background="Transparent">
        </Border>
    </ControlTemplate>

    <Style x:Key="CustomComboBoxItem" TargetType="ComboBoxItem">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#080511"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Name="Border" Background="{TemplateBinding Background}"   BorderBrush="Gray" CornerRadius="3"  BorderThickness="0">
                        <ContentPresenter 
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Margin="5 2"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#B2EBFE"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#F6F9F9"/>

                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="LightGray"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="Gray"/>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomComboBox" TargetType="ComboBox">
        <Setter Property="FontFamily" Value="Segoe"></Setter>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource CustomComboBoxItem}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Style="{StaticResource ComboBoxToggleButton}" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Margin="15,3,10,3" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"></ContentPresenter>
                        <TextBox Name="ComboBoxTextBox" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="True" IsReadOnly="{TemplateBinding IsReadOnly}" Template="{StaticResource ComboBoxTextBox}" Visibility="Hidden"></TextBox>
                        <Popup Name="Popup" PopupAnimation="Slide" Focusable="False" AllowsTransparency="True" Margin="3" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}">
                            <Grid Name="DropDown" MinWidth="{TemplateBinding ActualWidth}"  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border Name="DropDownBorder" CornerRadius="3"  BorderBrush="{DynamicResource MainThemeColor}" BorderThickness="2" Background="{StaticResource ComboBoxBackgroundColor}">
                                </Border>
                                <ScrollViewer Margin="4,6,4,6">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"></StackPanel>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0 5 0 0"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="3"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Context Menu Style-->
    <Style TargetType="ContextMenu">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="#F7FBFB"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border Background="{TemplateBinding Background}" CornerRadius="6" BorderThickness="1" BorderBrush="Gainsboro">
                        <ItemsPresenter Margin="2"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContextMenuItem" TargetType="MenuItem">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger  Property="IsMouseOver" Value="True" >
                <Setter Property="Background" Value="#E3F2FD" />
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>